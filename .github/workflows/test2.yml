name: Test NSG Rules validation 

on:
  workflow_dispatch:
    inputs:
      deploymentType:
        description : Input DeploymentType (networkSecurityGroups)
        required: true

jobs:

  Build:
    runs-on: [self-hosted, windows, Azure]
    steps:
      # Checkout code from repo
      - uses: actions/checkout@v2

      # Validate template
      - name: Validate Modules
        run: find ./Modules | grep .json | xargs -L1 python -mjson.tool > /dev/null
        shell: bash
      
      - name: Validate Configuration
        run: find ./Configuration | grep .json | xargs -L1 python -mjson.tool > /dev/null
        shell: bash

      # Upload Build Artifact
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: BuildArtifacts
          path: ./
 
 
  RegressionTest:
    runs-on: [self-hosted, windows, Azure]
    if: ${{ github.event.inputs.deploymentType == 'all' || github.event.inputs.deploymentType == 'networkCore' || github.event.inputs.deploymentType == 'networkSecurityGroups' }}
    environment: ConsumerDevsecops
    env:
      templateNsgPath: './Modules/Microsoft.Network/networkSecurityGroups/networkSecurityGroups.deploy.json'
      templateNsgParameterPath_bkp: './Configuration/Consumer/DevSecOps/pr-prd/Microsoft.Network-networkSecurityGroups/lz-devsecops-nsg-sn-auea-pr-prd-devsecops-backup-01.parameters.json'
      templateNsgParameterPath_ghe: './Configuration/Consumer/DevSecOps/pr-prd/Microsoft.Network-networkSecurityGroups/lz-devsecops-nsg-sn-auea-pr-prd-devsecops-ghe-01.parameters.json'
      templateNsgParameterPath_ghemgt: './Configuration/Consumer/DevSecOps/pr-prd/Microsoft.Network-networkSecurityGroups/lz-devsecops-nsg-sn-auea-pr-prd-devsecops-ghemgt-01.parameters.json'
  
   steps:
      # Download a Build Artifact
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.10
        with:
          name: BuildArtifacts
          path: BuildArtifacts

      # Azure Login
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SP_MG }}
          allow-no-subscriptions: true
          enable-AzPSSession: true
          
      # NSG Rules regression testing for Backup subnet
      - name: NSG Rules regression testing for Backup subnet
        if: ${{ github.event.inputs.deploymentType == 'all' || github.event.inputs.deploymentType == 'networkCore' || github.event.inputs.deploymentType == 'networkSecurityGroups' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            write-host "Set az context"
            Set-AzContext -SubscriptionId ${{ secrets.SUB_CONN_ID }} | out-null
            New-AzResourceGroupDeployment  `
              -Whatif `
              -ResourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -TemplateFile ${{ env.templateNsgPath }} `
              -TemplateParameterFile ${{ env.templateNsgParameterPath_bkp}}
          azPSVersion: latest

      # NSG Rules regression testing for GHE subnet
      - name: NSG Rules regression testing for GHE subnet
        if: ${{ github.event.inputs.deploymentType == 'all' || github.event.inputs.deploymentType == 'networkCore' || github.event.inputs.deploymentType == 'networkSecurityGroups' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            write-host "Set az context"
            Set-AzContext -SubscriptionId ${{ secrets.SUB_CONN_ID }} | out-null
            New-AzResourceGroupDeployment  `
              -Whatif `
              -ResourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -TemplateFile ${{ env.templateNsgPath }} `
              -TemplateParameterFile ${{ env.templateNsgParameterPath_ghe}}
          azPSVersion: latest   

      # NSG Rules regression testing for GHE Mgmt subnet
      - name: NSG Rules regression testing for ghemgt subnet
        if: ${{ github.event.inputs.deploymentType == 'all' || github.event.inputs.deploymentType == 'networkCore' || github.event.inputs.deploymentType == 'networkSecurityGroups' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            write-host "Set az context"
            Set-AzContext -SubscriptionId ${{ secrets.SUB_CONN_ID }} | out-null
            New-AzResourceGroupDeployment  `
              -Whatif `
              -ResourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -TemplateFile ${{ env.templateNsgPath }} `
              -TemplateParameterFile ${{ env.templateNsgParameterPath_ghemgt}}
          azPSVersion: latest     
     